include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.cscs.yml'
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

stages:
  - build

##
## BUILDS
##

.build_spack_common:
  tags: [rosa-k8s]
  image: quay.io/podman/stable:latest
  stage: build
  timeout: 6 hours
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    SPACK_SHA: 97c2dd3a5ac64dc338df79c41e8f88b177c32867
    SPACK_DLAF_REPO: ./spack
  before_script:
    - podman login -u $CSCS_REGISTRY_USER -p $CSCS_REGISTRY_PASSWORD $CSCS_REGISTRY
  script:
    # Note: a tag can contain 0-9 A-Z a-z -_.
    - TAG_IMAGE=`echo ${BASE_IMAGE##*/} | sed 's/[:]//g'`
    - TAG_APTGET=`echo ${EXTRA_APTGET} | sha256sum - | head -c 6`
    - TAG_COMPILER=`echo ${COMPILER}_CXX${CXXSTD} | sed 's/[@]//g'`
    - TAG_DOCKERFILE=`sha256sum $BUILD_DOCKER_FILE | head -c 16`
    - TAG_SPACK=`echo $SPACK_SHA | head -c 8`
    - TAG_REPO=`find $SPACK_DLAF_REPO -type f -exec sha256sum {} \; | sha256sum - | head -c 16`
    - TAG_ENVIRONMENT=`sha256sum $SPACK_ENVIRONMENT | head -c 16`
    - TAG=${TAG_IMAGE}-${TAG_APTGET}-${TAG_COMPILER}-MKL${USE_MKL}-${TAG_DOCKERFILE}-${TAG_SPACK}-${TAG_REPO}-${TAG_ENVIRONMENT}
    - mount -t tmpfs none /var/tmp
    - mount -t tmpfs none /var/lib/containers
    - 'echo "INFO: Using NUM_CORES_BUILD_DEPS=$NUM_CORES_BUILD_DEPS and NUM_CORES_BUILD_DLAF=$NUM_CORES_BUILD_DLAF"'
    - '(podman pull $BUILD_IMAGE:$TAG)
       ||  podman build
           -t $BUILD_IMAGE:$TAG -t $BUILD_IMAGE:latest
           --format docker --layers --isolation chroot
           --build-arg BASE_IMAGE
           --build-arg BUILDKIT_INLINE_CACHE=1
           --build-arg SPACK_SHA
           --build-arg EXTRA_APTGET
           --build-arg COMPILER
           --build-arg CXXSTD
           --build-arg SPACK_ENVIRONMENT
           --build-arg SPACK_DLAF_REPO --build-arg USE_MKL
           --build-arg NUM_PROCS=$NUM_CORES_BUILD_DEPS
           -f $BUILD_DOCKER_FILE .'

    - podman push $BUILD_IMAGE:$TAG
    - 'podman build
      -t $DEPLOY_IMAGE
      --format docker --layers --isolation chroot
      --build-arg BUILD_IMAGE=$BUILD_IMAGE:$TAG
      --build-arg DEPLOY_BASE_IMAGE
      --build-arg EXTRA_APTGET_DEPLOY
      --build-arg USE_MKL
      --build-arg USE_ROCBLAS
      --build-arg NUM_PROCS=$NUM_CORES_BUILD_DLAF
      -f $DEPLOY_DOCKER_FILE .'
    - podman push $DEPLOY_IMAGE
    - podman run -v $PWD/ci/ctest_to_gitlab.sh:/ctest_to_gitlab.sh $DEPLOY_IMAGE /ctest_to_gitlab.sh "$DEPLOY_IMAGE" "$USE_CODECOV" "$THREADS_PER_NODE" "$SLURM_CONSTRAINT" > pipeline.yml
  artifacts:
    paths:
      - pipeline.yml

rocm release build clang14+rocm-5.3.3:
  extends: .build_spack_common
  variables:
    BUILD_DOCKER_FILE: ci/docker/build.Dockerfile
    DEPLOY_DOCKER_FILE: ci/docker/deploy.Dockerfile
    BASE_IMAGE: $CSCS_REGISTRY_PATH/rocm-patched:5.3.3
    DEPLOY_BASE_IMAGE: $CSCS_REGISTRY_PATH/rocm-patched:5.3.3
    EXTRA_APTGET: "clang-14 rocblas rocblas-dev rocsolver rocsolver-dev rocprim-dev rocthrust-dev llvm-amdgpu rocm-device-libs"
    EXTRA_APTGET_DEPLOY: "glibc-tools"
    # glibc-tools is needed for libSegFault on ubuntu:22.04
    COMPILER: clang@14.0.0
    CXXSTD: 17
    USE_MKL: "OFF"
    USE_ROCBLAS: "ON"
    SPACK_ENVIRONMENT: ci/docker/release-rocm533.yaml
    BUILD_IMAGE: $CSCS_REGISTRY_PATH/release-rocm-clang14/build
    DEPLOY_IMAGE: $CSCS_REGISTRY_PATH/release-rocm-clang14/deploy:$CI_COMMIT_SHA
    SLURM_CONSTRAINT: mc
    THREADS_PER_NODE: 64
    USE_CODECOV: "false"
