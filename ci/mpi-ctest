#!/bin/bash -e
#
# Distributed Linear Algebra with Future (DLAF)
#
# Copyright (c) ETH Zurich
# All rights reserved.
#
# Please, refer to the LICENSE file in the root directory.
# SPDX-License-Identifier: BSD-3-Clause
#

if [[ "$ENABLE_COVERAGE" == "YES" ]]; then
    SHARED_REPORTS="$CI_PROJECT_DIR/codecov-reports"
    REPORT_NAME=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1`

    mkdir -p "$SHARED_REPORTS"
fi;

CTEST_OUTPUT="$CI_PROJECT_DIR/output/ctest.$SLURM_PROCID.txt"

pushd /DLA-Future-build > /dev/null

# Solves container squashfs hang problems (#1305)
if [[ $SLURM_LOCALID == "0" ]]; then
    rm -rf Testing
    ln -s /dev/shm Testing
fi
sleep 1

if [[ $DLAF_CI_BIND_GPU == "ALPS-GH200" ]]
then
    export CUDA_VISIBLE_DEVICES=$(( SLURM_LOCALID % 4 ))
    echo "Rank $SLURM_PROCID: set CUDA_VISIBLE_DEVICES=$CUDA_VISIBLE_DEVICES"
fi

# Run the tests, only output on the first rank
if [[ $SLURM_PROCID == "0" ]]; then
    TZ=CET date +"Run started at: %H:%M:%S %z"
    ctest --output-log "$CTEST_OUTPUT" -V $@ | grep -v "PU.*Core.*Socket.*pool" | grep -v "MPI rank: 0" | grep -E -v "\*{70}"
    TZ=CET date +"Run finished at: %H:%M:%S %z"
else
    ctest --output-log "$CTEST_OUTPUT" -V -Q $@
fi

# Create coverage reports for code run
if [[ "$ENABLE_COVERAGE" == "YES" ]]; then
    # On daint-mc (XC40) reduce the number of tasks to avoid out-of-memory error
    if [ $SLURM_CPUS_ON_NODE -eq 72 -a "$SLURM_CLUSTER_NAME" = "daint" ]; then
      COV_THREADS=$((SLURM_CPUS_PER_TASK/2))
    else
      COV_THREADS=$SLURM_CPUS_PER_TASK
    fi

    TZ=CET date +"Start creating codecov reports from rank $SLURM_PROCID at: %H:%M:%S %z with $COV_THREADS threads"

    fastcov --jobs $COV_THREADS --gcov gcov --process-gcno --branch-coverage --include /DLA-Future/ --exclude /DLA-Future/test/ /DLA-Future/miniapp/ --lcov -o "$LOCAL_REPORTS/run.info" &> /dev/null

    cp "$LOCAL_REPORTS/run.info" "$SHARED_REPORTS/codecov-$REPORT_NAME.info"

    TZ=CET date +"Done creating codecov reports from rank $SLURM_PROCID at: %H:%M:%S %z"
fi

popd > /dev/null
