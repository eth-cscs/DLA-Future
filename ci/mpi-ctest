#!/bin/bash -e

if [[ "$ENABLE_COVERAGE" == "YES" ]]; then
    TZ=CET date +"Start initialization of codecov reports from rank $SLURM_PROCID at: %H:%M:%S %z"

    LOCAL_REPORTS="/codecov-reports"
    SHARED_REPORTS="$CI_PROJECT_DIR/codecov-reports"
    REPORT_NAME=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1`

    mkdir -p "$LOCAL_REPORTS"
    mkdir -p "$SHARED_REPORTS"
    lcov --no-external --capture --initial --base-directory /DLA-Future --directory /DLA-Future-build --output-file "$LOCAL_REPORTS/baseline-codecov.info" &> /dev/null

    TZ=CET date +"Done initialization of codecov reports from rank $SLURM_PROCID at: %H:%M:%S %z"
fi;

pushd /DLA-Future-build > /dev/null

# Run the tests, only output on the first rank
if [[ $SLURM_PROCID == "0" ]]; then
    TZ=CET date +"Run started at: %H:%M:%S %z"
    ctest -V $@
    TZ=CET date +"Run finished at: %H:%M:%S %z"
else
    ctest -Q $@
fi

popd > /dev/null

# Create coverage reports for code run
if [[ "$ENABLE_COVERAGE" == "YES" ]]; then
    TZ=CET date +"Start creating codecov reports from rank $SLURM_PROCID at: %H:%M:%S %z"

    lcov --no-external --capture --base-directory /DLA-Future --directory /DLA-Future-build --output-file "$LOCAL_REPORTS/run.info" &> /dev/null

    lcov --add-tracefile "$LOCAL_REPORTS/baseline-codecov.info" --add-tracefile "$LOCAL_REPORTS/run.info" --output-file "$LOCAL_REPORTS/combined.info" &> /dev/null

    # Only keep our own source
    lcov --extract "$LOCAL_REPORTS/combined.info" "/DLA-Future/*" --output-file "$LOCAL_REPORTS/combined.info" &> /dev/null

    # exclude miniapp/ and test/
    lcov --remove "$LOCAL_REPORTS/combined.info" "/DLA-Future/miniapp/*" --output-file "$LOCAL_REPORTS/combined.info" &> /dev/null
    lcov --remove "$LOCAL_REPORTS/combined.info" "/DLA-Future/test/*" --output-file "$LOCAL_REPORTS/combined.info" &> /dev/null

    cp "$LOCAL_REPORTS/combined.info" "$SHARED_REPORTS/codecov-$REPORT_NAME.info"

    TZ=CET date +"Done creating codecov reports from rank $SLURM_PROCID at: %H:%M:%S %z"
fi
